on:
  push:
    branches:
      - master

env:
  K8S_NAMESPACE: production
  INPUT_MANIFEST: k8s/izacore-prd.yaml
  OUTPUT_MANIFEST: k8s/izacore-deployment.yaml
  INPUT_SVC_MANIFEST: k8s/izacore-svc-tpl.yaml
  OUTPUT_SVC_MANIFEST: k8s/izacore-svc-output.yaml
  AWS_REGION: us-west-2
  EKS_CLUSTER_NAME: oowlishtracker

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: oowlish
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Deploy
      uses: cancue/eks-action@v0.0.2
      env:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: us-west-2
        cluster_name: $EKS_CLUSTER_NAME
        IMAGE_TAG: ${{ github.sha }}
      with:
        args: |
          sed 's|IMAGE|670355910429.dkr.ecr.us-east-2.amazonaws.com/\/oowlish:'$IMAGE_TAG'|g' $INPUT_MANIFEST &&
          kubectl apply -f $INPUT_MANIFEST